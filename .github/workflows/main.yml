name: Publish Docker

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Node.js 18.x
              uses: actions/setup-node@v2
              with:
                  node-version: 18.x
            - name: Install dependencies
              uses: bahmutov/npm-install@v1
            - name: Run linter
              run: npm run lint
    run-unit-tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Node.js 18.x
              uses: actions/setup-node@v2
              with:
                  node-version: 18.x
            - name: Install dependencies
              uses: bahmutov/npm-install@v1
            - name: Run tests
              run: npm run test
    run-e2e-tests:
        runs-on: ubuntu-latest
        env:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            JWT_SECRET: 'test'
            TELEGRAM_TOKEN: '5662935320:AAHKf2IBCHUtIJm4zQvE-SNytHlv3wz-u0k'
            DOMAIN: 'localhost:3000'
        steps:
            - uses: actions/checkout@v3
            - name: Node.js 18.x
              uses: actions/setup-node@v2
              with:
                  node-version: 18.x
            - name: Install dependencies
              uses: bahmutov/npm-install@v1
              env:
                  DATABASE_URL: ${{ secrets.DATABASE_URL }}
            - name: Prisma generate
              run: npx prisma generate
            - name: Run tests
              run: npm run test:e2e
    build:
        runs-on: ubuntu-latest
        needs: [lint, run-unit-tests, run-e2e-tests]
        steps:
            - uses: actions/checkout@v3
            - name: Publish to Registry
              uses: elgohr/Publish-Docker-Github-Action@v5
              with:
                  registry: ghcr.io
                  name: Did82/purpleschool-nestjs-top-api/top-api
                  username: ${{ github.actor }}
                  password: ${{ secrets.PACKAGES_TOKEN }}
